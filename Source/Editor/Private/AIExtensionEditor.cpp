// Copyright 2015-2017 Piperift. All Rights Reserved.

#include "AIExtensionEditorPrivatePCH.h"

#include "Kismet2/KismetEditorUtilities.h"

#include "BPBehaviourTreeComponent.h"

DEFINE_LOG_CATEGORY(LogAIExtensionEditor)
 
#define LOCTEXT_NAMESPACE "AIExtensionEditor"
 
void FAIExtensionEditorModule::StartupModule()
{
    UE_LOG(LogAIExtensionEditor, Warning, TEXT("AIExtensionEditor: Log Started"));

    RegisterPropertyTypeCustomizations();
    PrepareAutoGeneratedDefaultEvents();
}
 
void FAIExtensionEditorModule::ShutdownModule()
{
    UE_LOG(LogAIExtensionEditor, Warning, TEXT("AIExtensionEditor: Log Ended"));

    CreatedAssetTypeActions.Empty();

    // Cleanup all information for auto generated default event nodes by this module
    FKismetEditorUtilities::UnregisterAutoBlueprintNodeCreation(this);
}


void FAIExtensionEditorModule::RegisterPropertyTypeCustomizations()
{
    //RegisterCustomPropertyTypeLayout("Something", FOnGetPropertyTypeCustomizationInstance::CreateStatic(&FSomethingCustomization::MakeInstance));
}

void FAIExtensionEditorModule::PrepareAutoGeneratedDefaultEvents()
{
    //BP Behaviour Tree Component events
    RegisterDefaultEvent(UBPBehaviourTreeComponent, BeginPlay);
    RegisterDefaultEvent(UBPBehaviourTreeComponent, Root);
}


void FAIExtensionEditorModule::RegisterCustomPropertyTypeLayout(FName PropertyTypeName, FOnGetPropertyTypeCustomizationInstance PropertyTypeLayoutDelegate)
{
    check(PropertyTypeName != NAME_None);

    static FName PropertyEditor("PropertyEditor");
    FPropertyEditorModule& PropertyModule = FModuleManager::GetModuleChecked<FPropertyEditorModule>(PropertyEditor);
    PropertyModule.RegisterCustomPropertyTypeLayout(PropertyTypeName, PropertyTypeLayoutDelegate);
}

#undef LOCTEXT_NAMESPACE

IMPLEMENT_GAME_MODULE(FAIExtensionEditorModule, AIExtensionEditor);